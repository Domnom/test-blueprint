/** 
 * @class Board
 * @namespace components 
 * @description 
 * @author Playbook
 */
import React, { Fragment } from 'react';
import PropTypes from 'prop-types';
{{partial_1}}
/**
 * @import Components
 */
import CardList from '../card-list/card-list.component';

/**
 * @import Styles
 */
import './board.styles.css';

/**
 * @import Types
 */
type TCardData = {
    id: number;
    name : string;
}
type TListData = {
{{partial_2}}    name : string;
    cards : TCardData[]
}

/**
 * @param {TProperty} TProperty 
 */
type TProperty = {
    name : string;
    listsData? : TListData[]
}
/**
 * @param {TState} TState
 */
type TState = {

}

/**
 * Board 
 *
 * @class Board
 * @extends {React.Component<TProperty, TState>}
 */
class Board extends React.Component<TProperty, TState> {

    /**
     * @param {PropTypes} propTypes - property types to check at run time 
     */
    static propTypes = {
        name : PropTypes.string.isRequired,
        listsData : PropTypes.arrayOf(Object)
    }

    /**
     * Render the Board 
     *
     * @returns {JSX} component 
     * @memberof Board
     */
    render() {

        let cardListComponents: JSX.Element[] = [];

        /**
         * @description We are checking to see if there are listsData to build cardListComponents
         */
        if (this.props.listsData)
        {
            /**
             * @description Using array functions, iterate over the listsData and return JSX.Elements
             */
            cardListComponents = this.props.listsData.map((listData: TListData, listDataIndex: number) => {
                /**
                 * @description Check if the required props for the CardList before creating
                 */
{{partial_3}}                {
                    return (
{{partial_4}}                    )
                }
            })
        }


        return (
            <div className="boardComponent">
                <div className="boardName">
                    {this.props.name}
                </div>
{{partial_5}}            </div>
        );
    }

}

export default Board;
