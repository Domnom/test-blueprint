                    /**
                     * @description Because we are returning an array of Cards, we will also need to supply a required React property "key" 
                     *              (any value that uniquely identifies each item within this array) so for now, we will use the array index.
                     * 
                     *              The card will be wrapped in a Draggable component and this component will take in a function that generates a JSX.Element.
                     *              This function is passed a provided object (generated by DragDropContext) which will be used to build our draggable card
                     * 
                     *              Due to library requirements, an additional div (the div is required by react-beautiful-dnd as it needs to 
                     *              target an HTMLElement, not a react component https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/using-inner-ref.md)
                     */
                    return (
                        <Draggable
                            draggableId={"card-" + cardData.id}
                            index={cardData.id}
                            key={cardData.id}
                        >
                            {(provided: DraggableProvided) => {
                                return (
                                    <div
                                        ref={provided.innerRef}
                                        {...provided.dragHandleProps}
                                        {...provided.draggableProps}
                                    >
                                        <Card 
                                            name={cardData.name}
                                        />
                                    </div>
                                )
                            }}
                            
                        </Draggable>
                    );
