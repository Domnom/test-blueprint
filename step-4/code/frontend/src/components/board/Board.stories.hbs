/** 
 * @class Board Stories 
 * @namespace stories 
 * @description 
 * @author Nick Mitchell
 */

import React from 'react';
import { storiesOf } from '@storybook/react';
import { withKnobs, text as textAddOn, boolean as booleanAddOn, number, object as objectAddOn, array as arrayAddOn, select, radios, optionsKnob, files, date, button as buttonAddOn } from '@storybook/addon-knobs';

/**
 * @name Component
 * @requires import 
 */
import Board from './Board.component';


/**
 * @optional Decorator
 * @param {String} categoryName - the tab name 
 * @param {Function:JSX.Element} storyFn - story function that returns JSX Element 
 */
const ReduxDecorator = (storyFn) => {

    const mockStore = {
        hello: "world"
    }

    return (<section>
        {storyFn()}
    </section>)
}

/**
 * Story Category
 * @param {String} categoryName - the tab name 
 * @param {NodeModule} module - no diea what this does? 
 */
const stories = storiesOf('Components/Board', module);

/** 
 * Stories 
 * @name add 
 * @param {string} storyName - story name which is the name of the tab 
 * @param {Function:JSX.Element} fn - returns the react element 
 */
stories
    .addDecorator(withKnobs) // <--- add knobs 
    .addDecorator(ReduxDecorator) // <--- this is optional 
    .add('Board', ()=>{
        
        const defaultStyle = {
            id: "Board1",
            backgroundColor: "rgba(255,255,255,.8)",
            width: "250px",
            minHeight: "150px",
            marginTop: "30px"
        };
        const styleJson = objectAddOn('this.props.styles', defaultStyle, 'Board.styles');

        const defaultItem = {
            id: '1',
            firstName: 'Nick',
            lastName: 'Micthell',
            description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Libero, banditos.',
        }
        const itemJson = objectAddOn('this.props.item', defaultItem, 'Board.item');
        
        const css = require('../../assets/css/app.css');

        return (<Board style={styleJson} item={itemJson} />)
    },
    {
        notes: `#Board
            Board needs items and style overrides
        `
    })


    stories.add('wireframe', ()=>{

        const url = textAddOn('Wireframe Url', 'https://miro.medium.com/max/1600/1*ZvtdfRPAdFpf2av_bvqE6w.png', 'Wireframe');
        const isPicture = booleanAddOn('Display as Image (or iFrame)', true, 'Options');
    
        if(isPicture){
            return (<img src={url} />)
        }
        else{
            return (<iframe style={{width: '100%', height:'100%'}} src={url} />)
        }
    
    })
    stories.add('design', ()=>{
        const url = textAddOn('Design Url', 'https://designcode.io/images/Angle/Plugin-Video.jpg', 'Design');
        const isPicture = booleanAddOn('Display as Image (or iFrame)', true, 'Options');
    
        if(isPicture){
            return (<img src={url} />)
        }
        else{
            return (<iframe style={{width: '100%', height:'100%'}} src={url} />)
        }
    })
    // stories.add('component', ()=>{})
    stories.add('with redux', ()=>{
        return <div>to do </div>
    })
    stories.add('with mock api', ()=>{
        return <div>to do </div>
    })
    


/**
 * Interactions 
 */    
const interactions = storiesOf('Interactions/Board', module);    
interactions.add('Sortable', ()=>{
    return (<div> Im a sortable </div>);
})  